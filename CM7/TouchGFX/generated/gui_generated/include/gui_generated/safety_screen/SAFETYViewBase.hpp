/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SAFETYVIEWBASE_HPP
#define SAFETYVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/safety_screen/SAFETYPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/progress_indicators/LineProgress.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <gui/containers/STACK_6_PopUp.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>
#include <gui/containers/STACK_5_PopUp.hpp>
#include <gui/containers/STACK_4_PopUp.hpp>
#include <gui/containers/STACK_3_PopUp.hpp>
#include <gui/containers/STACK_2_PopUp.hpp>
#include <gui/containers/STACK_1_PopUp.hpp>
#include <gui/containers/LoRA_PopUp.hpp>

class SAFETYViewBase : public touchgfx::View<SAFETYPresenter>
{
public:
    SAFETYViewBase();
    virtual ~SAFETYViewBase();
    virtual void setupScreen();
    virtual void handleTickEvent();
    virtual void transitionBegins();

    /*
     * Virtual Action Handlers
     */
    virtual void TransitionEnd_Safety()
    {
        // Override and implement this function in SAFETY
    }
    virtual void TransitionBegin_Safety()
    {
        // Override and implement this function in SAFETY
    }
    virtual void STACK_1_Begin()
    {
        // Override and implement this function in SAFETY
    }
    virtual void STACK_1_End()
    {
        // Override and implement this function in SAFETY
    }
    virtual void STACK_2_Begin()
    {
        // Override and implement this function in SAFETY
    }
    virtual void STACK_2_End()
    {
        // Override and implement this function in SAFETY
    }
    virtual void STACK_3_Begin()
    {
        // Override and implement this function in SAFETY
    }
    virtual void STACK_3_End()
    {
        // Override and implement this function in SAFETY
    }
    virtual void STACK_4_Begin()
    {
        // Override and implement this function in SAFETY
    }
    virtual void STACK_4_End()
    {
        // Override and implement this function in SAFETY
    }
    virtual void STACK_5_Begin()
    {
        // Override and implement this function in SAFETY
    }
    virtual void STACK_5_End()
    {
        // Override and implement this function in SAFETY
    }
    virtual void LORA_Begin()
    {
        // Override and implement this function in SAFETY
    }
    virtual void LORA_End()
    {
        // Override and implement this function in SAFETY
    }
    virtual void STACK_6_Begin()
    {
        // Override and implement this function in SAFETY
    }
    virtual void STACK_6_End()
    {
        // Override and implement this function in SAFETY
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image BACKGROUND;
    touchgfx::FadeAnimator< touchgfx::LineProgress > CHARGE_Progress;
    touchgfx::PainterRGB565 CHARGE_ProgressPainter;
    touchgfx::Image PopUp;
    touchgfx::Button PAGE_Debug;
    touchgfx::Button PAGE_Safety;
    touchgfx::Button PAGE_Control;
    touchgfx::Button PAGE_Drive;
    touchgfx::Button BOTTON_Stack_6;
    touchgfx::Button BOTTON_Stack_5;
    touchgfx::Button BOTTON_Stack_4;
    touchgfx::Button BOTTON_Stack_3;
    touchgfx::Button BOTTON_Stack_2;
    touchgfx::Button BOTTON_Stack_1;
    touchgfx::FadeAnimator< touchgfx::Image > SENSOR_4_icon;
    touchgfx::FadeAnimator< touchgfx::Image > SENSOR_3_icon;
    touchgfx::FadeAnimator< touchgfx::Image > SENSOR_2_icon;
    touchgfx::FadeAnimator< touchgfx::Image > SENSOR_1_icon;
    touchgfx::FadeAnimator< touchgfx::TextAreaWithOneWildcard > temp_max;
    touchgfx::FadeAnimator< touchgfx::TextAreaWithOneWildcard > tensao_max;
    touchgfx::FadeAnimator< touchgfx::TextAreaWithOneWildcard > tensao_min;
    touchgfx::FadeAnimator< touchgfx::TextAreaWithOneWildcard > charge_percent;
    touchgfx::FadeAnimator< touchgfx::TextAreaWithOneWildcard > STACK_6_text;
    touchgfx::FadeAnimator< touchgfx::TextAreaWithOneWildcard > STACK_5_text;
    touchgfx::FadeAnimator< touchgfx::TextAreaWithOneWildcard > STACK_4_text;
    touchgfx::FadeAnimator< touchgfx::TextAreaWithOneWildcard > STACK_3_text;
    touchgfx::FadeAnimator< touchgfx::TextAreaWithOneWildcard > STACK_2_text;
    touchgfx::FadeAnimator< touchgfx::TextAreaWithOneWildcard > STACK_1_text;
    touchgfx::FadeAnimator< touchgfx::TextAreaWithOneWildcard > SENSOR_4_text;
    touchgfx::FadeAnimator< touchgfx::TextAreaWithOneWildcard > SENSOR_3_text;
    touchgfx::FadeAnimator< touchgfx::TextAreaWithOneWildcard > SENSOR_2_text;
    touchgfx::FadeAnimator< touchgfx::TextAreaWithOneWildcard > SENSOR_1_text;
    touchgfx::Image ICON_Air;
    touchgfx::Image ICON_Modo;
    touchgfx::Button BOTTOM_Info_LoRa;
    touchgfx::Image ICON_LoRa;
    touchgfx::FadeAnimator< touchgfx::Box > FRONTGROUND;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  BOTTON_stack_6;
    touchgfx::MoveAnimator< STACK_6_PopUp > STACK_6;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  BOTTON_stack_5;
    touchgfx::MoveAnimator< STACK_5_PopUp > STACK_5;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  BOTTON_stack_4;
    touchgfx::MoveAnimator< STACK_4_PopUp > STACK_4;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  BOTTON_stack_3;
    touchgfx::MoveAnimator< STACK_3_PopUp > STACK_3;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  BOTTON_stack_2;
    touchgfx::MoveAnimator< STACK_2_PopUp > STACK_2;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  BOTTON_stack_1;
    touchgfx::MoveAnimator< STACK_1_PopUp > STACK_1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  BOTTON_lora;
    touchgfx::MoveAnimator< LoRA_PopUp > LORA_PopUp;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEMP_MAX_SIZE = 5;
    touchgfx::Unicode::UnicodeChar temp_maxBuffer[TEMP_MAX_SIZE];
    static const uint16_t TENSAO_MAX_SIZE = 5;
    touchgfx::Unicode::UnicodeChar tensao_maxBuffer[TENSAO_MAX_SIZE];
    static const uint16_t TENSAO_MIN_SIZE = 5;
    touchgfx::Unicode::UnicodeChar tensao_minBuffer[TENSAO_MIN_SIZE];
    static const uint16_t CHARGE_PERCENT_SIZE = 5;
    touchgfx::Unicode::UnicodeChar charge_percentBuffer[CHARGE_PERCENT_SIZE];
    static const uint16_t STACK_6_TEXT_SIZE = 5;
    touchgfx::Unicode::UnicodeChar STACK_6_textBuffer[STACK_6_TEXT_SIZE];
    static const uint16_t STACK_5_TEXT_SIZE = 5;
    touchgfx::Unicode::UnicodeChar STACK_5_textBuffer[STACK_5_TEXT_SIZE];
    static const uint16_t STACK_4_TEXT_SIZE = 5;
    touchgfx::Unicode::UnicodeChar STACK_4_textBuffer[STACK_4_TEXT_SIZE];
    static const uint16_t STACK_3_TEXT_SIZE = 5;
    touchgfx::Unicode::UnicodeChar STACK_3_textBuffer[STACK_3_TEXT_SIZE];
    static const uint16_t STACK_2_TEXT_SIZE = 5;
    touchgfx::Unicode::UnicodeChar STACK_2_textBuffer[STACK_2_TEXT_SIZE];
    static const uint16_t STACK_1_TEXT_SIZE = 5;
    touchgfx::Unicode::UnicodeChar STACK_1_textBuffer[STACK_1_TEXT_SIZE];
    static const uint16_t SENSOR_4_TEXT_SIZE = 5;
    touchgfx::Unicode::UnicodeChar SENSOR_4_textBuffer[SENSOR_4_TEXT_SIZE];
    static const uint16_t SENSOR_3_TEXT_SIZE = 5;
    touchgfx::Unicode::UnicodeChar SENSOR_3_textBuffer[SENSOR_3_TEXT_SIZE];
    static const uint16_t SENSOR_2_TEXT_SIZE = 5;
    touchgfx::Unicode::UnicodeChar SENSOR_2_textBuffer[SENSOR_2_TEXT_SIZE];
    static const uint16_t SENSOR_1_TEXT_SIZE = 5;
    touchgfx::Unicode::UnicodeChar SENSOR_1_textBuffer[SENSOR_1_TEXT_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<SAFETYViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<SAFETYViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

    /*
     * Delay Variable Declarations
     */
    static const uint16_t INTERACTION_DELAY_DRIVER_PAGE_DURATION = 15;
    uint16_t interaction_Delay_DRIVER_pageCounter;
    static const uint16_t INTERACTION_DELAY_CONTROL_PAGE_DURATION = 15;
    uint16_t interaction_Delay_CONTROL_pageCounter;
    static const uint16_t INTERACTION_DELAY_DEBUG_PAGE_DURATION = 15;
    uint16_t interaction_Delay_DEBUG_pageCounter;

};

#endif // SAFETYVIEWBASE_HPP
