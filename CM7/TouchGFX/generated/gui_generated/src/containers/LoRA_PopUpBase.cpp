/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/LoRA_PopUpBase.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

LoRA_PopUpBase::LoRA_PopUpBase() :
    buttonCallback(this, &LoRA_PopUpBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &LoRA_PopUpBase::sliderValueChangedCallbackHandler),
    loRa_Config_End_DelayCounter(0)
{
    setWidth(320);
    setHeight(236);
    LoRa_background.setXY(0, 0);
    LoRa_background.setBitmap(touchgfx::Bitmap(BITMAP_LORA_POPUP_BACKGROUND_ID));
    add(LoRa_background);

    FREQUENCIA.setPosition(166, 166, 28, 19);
    FREQUENCIA.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    FREQUENCIA.setLinespacing(0);
    Unicode::snprintf(FREQUENCIABuffer, FREQUENCIA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_B2MD).getText());
    FREQUENCIA.setWildcard(FREQUENCIABuffer);
    FREQUENCIA.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YH8M));
    add(FREQUENCIA);

    CODING_RATE.setPosition(252, 132, 28, 19);
    CODING_RATE.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    CODING_RATE.setLinespacing(0);
    Unicode::snprintf(CODING_RATEBuffer, CODING_RATE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_3GDV).getText());
    CODING_RATE.setWildcard(CODING_RATEBuffer);
    CODING_RATE.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JFP0));
    add(CODING_RATE);

    SPREAD_FACTOR.setPosition(166, 101, 28, 19);
    SPREAD_FACTOR.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    SPREAD_FACTOR.setLinespacing(0);
    Unicode::snprintf(SPREAD_FACTORBuffer, SPREAD_FACTOR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_WDH4).getText());
    SPREAD_FACTOR.setWildcard(SPREAD_FACTORBuffer);
    SPREAD_FACTOR.setTypedText(touchgfx::TypedText(T___SINGLEUSE_15SS));
    add(SPREAD_FACTOR);

    BANDWIDTH.setPosition(247, 70, 28, 19);
    BANDWIDTH.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    BANDWIDTH.setLinespacing(0);
    Unicode::snprintf(BANDWIDTHBuffer, BANDWIDTH_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_K7BY).getText());
    BANDWIDTH.setWildcard(BANDWIDTHBuffer);
    BANDWIDTH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9JOW));
    add(BANDWIDTH);

    USER_ID.setPosition(15, 200, 114, 17);
    USER_ID.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    USER_ID.setLinespacing(0);
    Unicode::snprintf(USER_IDBuffer, USER_ID_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_FP6W).getText());
    USER_ID.setWildcard(USER_IDBuffer);
    USER_ID.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QL18));
    add(USER_ID);

    DATA_Rate.setPosition(14, 158, 76, 17);
    DATA_Rate.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    DATA_Rate.setLinespacing(0);
    Unicode::snprintf(DATA_RateBuffer, DATA_RATE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VP9N).getText());
    DATA_Rate.setWildcard(DATA_RateBuffer);
    DATA_Rate.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LXFC));
    add(DATA_Rate);

    VERSION.setPosition(16, 115, 68, 16);
    VERSION.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    VERSION.setLinespacing(0);
    Unicode::snprintf(VERSIONBuffer, VERSION_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1JCY).getText());
    VERSION.setWildcard(VERSIONBuffer);
    VERSION.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HRQE));
    add(VERSION);

    STATE.setXY(39, 72);
    STATE.setBitmap(touchgfx::Bitmap(BITMAP_LORA_OFF_ID));
    add(STATE);

    RSSI.setPosition(23, 30, 63, 17);
    RSSI.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    RSSI.setLinespacing(0);
    Unicode::snprintf(RSSIBuffer, RSSI_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_14QM).getText());
    RSSI.setWildcard(RSSIBuffer);
    RSSI.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LIL6));
    add(RSSI);

    SLIDER_FREQ.setXY(480, 175);
    SLIDER_FREQ.setBitmaps(touchgfx::Bitmap(BITMAP_LORA_POPUP_SLIDEROFF_ID), touchgfx::Bitmap(BITMAP_LORA_POPUP_SLIDERON_ID), touchgfx::Bitmap(BITMAP_LORA_POPUP_SLIDERBOTTON_ID));
    SLIDER_FREQ.setupHorizontalSlider(8, 5, 0, 0, 70);
    SLIDER_FREQ.setValueRange(860, 930);
    SLIDER_FREQ.setValue(860);
    SLIDER_FREQ.setNewValueCallback(sliderValueChangedCallback);
    add(SLIDER_FREQ);

    LoRa_Info.setXY(120, 27);
    LoRa_Info.setBitmaps(touchgfx::Bitmap(BITMAP_LORA_POPUP_INFO_ID), touchgfx::Bitmap(BITMAP_LORA_POPUP_INFOCLICK_ID));
    LoRa_Info.setAction(buttonCallback);
    add(LoRa_Info);

    LoRa_Config.setXY(120, 27);
    LoRa_Config.setBitmaps(touchgfx::Bitmap(BITMAP_LORA_POPUP_CONFIG_ID), touchgfx::Bitmap(BITMAP_LORA_POPUP_CONFIGCLICK_ID));
    LoRa_Config.setAlpha(0);
    LoRa_Config.setVisible(false);
    LoRa_Config.setAction(buttonCallback);
    add(LoRa_Config);

    BT_CR_DOWN.setXY(289, 143);
    BT_CR_DOWN.setBitmaps(touchgfx::Bitmap(BITMAP_LORA_POPUP_BOTTONDOWN_ID), touchgfx::Bitmap(BITMAP_LORA_POPUP_BOTTONDOWN_PRESS_ID));
    BT_CR_DOWN.setAlpha(0);
    BT_CR_DOWN.setAction(buttonCallback);
    add(BT_CR_DOWN);

    BT_CR_UP.setXY(288, 121);
    BT_CR_UP.setBitmaps(touchgfx::Bitmap(BITMAP_LORA_POPUP_BOTTONUP_ID), touchgfx::Bitmap(BITMAP_LORA_POPUP_BOTTONUP_PRESS_ID));
    BT_CR_UP.setAlpha(0);
    BT_CR_UP.setAction(buttonCallback);
    add(BT_CR_UP);

    BT_SF_DOWN.setXY(203, 112);
    BT_SF_DOWN.setBitmaps(touchgfx::Bitmap(BITMAP_LORA_POPUP_BOTTONDOWN_ID), touchgfx::Bitmap(BITMAP_LORA_POPUP_BOTTONDOWN_PRESS_ID));
    BT_SF_DOWN.setAlpha(0);
    BT_SF_DOWN.setAction(buttonCallback);
    add(BT_SF_DOWN);

    BT_SF_UP.setXY(202, 90);
    BT_SF_UP.setBitmaps(touchgfx::Bitmap(BITMAP_LORA_POPUP_BOTTONUP_ID), touchgfx::Bitmap(BITMAP_LORA_POPUP_BOTTONUP_PRESS_ID));
    BT_SF_UP.setAlpha(0);
    BT_SF_UP.setAction(buttonCallback);
    add(BT_SF_UP);

    BT_BAND_DOWN.setXY(286, 81);
    BT_BAND_DOWN.setBitmaps(touchgfx::Bitmap(BITMAP_LORA_POPUP_BOTTONDOWN_ID), touchgfx::Bitmap(BITMAP_LORA_POPUP_BOTTONDOWN_PRESS_ID));
    BT_BAND_DOWN.setAlpha(0);
    BT_BAND_DOWN.setAction(buttonCallback);
    add(BT_BAND_DOWN);

    BT_BAND_UP.setXY(285, 59);
    BT_BAND_UP.setBitmaps(touchgfx::Bitmap(BITMAP_LORA_POPUP_BOTTONUP_ID), touchgfx::Bitmap(BITMAP_LORA_POPUP_BOTTONUP_PRESS_ID));
    BT_BAND_UP.setAlpha(0);
    BT_BAND_UP.setAction(buttonCallback);
    add(BT_BAND_UP);
}

LoRA_PopUpBase::~LoRA_PopUpBase()
{

}

void LoRA_PopUpBase::initialize()
{

}

void LoRA_PopUpBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &LoRa_Info)
    {
        //LoRa_Config_Begin
        //When LoRa_Info clicked call virtual function
        //Call LoRa_Config_Begin
        LoRa_Config_Begin();
    }
    if (&src == &LoRa_Config)
    {
        //LoRa_Config_End
        //When LoRa_Config clicked call virtual function
        //Call LoRa_Config_End
        LoRa_Config_End();
        //LoRa_Config_End_Delay
        //When LoRa_Config clicked delay
        //Delay for 251 ms (15 Ticks)
        loRa_Config_End_DelayCounter = LORA_CONFIG_END_DELAY_DURATION;
        touchgfx::Application::getInstance()->registerTimerWidget(this);
    }
    if (&src == &BT_BAND_UP)
    {
        //BT_BAND_UP_Callback
        //When BT_BAND_UP clicked call virtual function
        //Call BT_BAND_UP_Callback
        BT_BAND_UP_Callback();
    }
    if (&src == &BT_BAND_DOWN)
    {
        //BT_BAND_DOWN_Callback
        //When BT_BAND_DOWN clicked call virtual function
        //Call BT_BAND_DOWN_Callback
        BT_BAND_DOWN_Callback();
    }
    if (&src == &BT_SF_UP)
    {
        //BT_SF_UP_Callback
        //When BT_SF_UP clicked call virtual function
        //Call BT_SF_UP_Callback
        BT_SF_UP_Callback();
    }
    if (&src == &BT_SF_DOWN)
    {
        //BT_SF_DOWN_Callback
        //When BT_SF_DOWN clicked call virtual function
        //Call BT_SF_DOWN_Callback
        BT_SF_DOWN_Callback();
    }
    if (&src == &BT_CR_UP)
    {
        //BT_CR_UP_Callback
        //When BT_CR_UP clicked call virtual function
        //Call BT_CR_UP_Callback
        BT_CR_UP_Callback();
    }
    if (&src == &BT_CR_DOWN)
    {
        //BT_CR_DOWN_Callback
        //When BT_CR_DOWN clicked call virtual function
        //Call BT_CR_DOWN_Callback
        BT_CR_DOWN_Callback();
    }
}

void LoRA_PopUpBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &SLIDER_FREQ)
    {
        //FREQUENCIA_Callback
        //When SLIDER_FREQ value changed call virtual function
        //Call FREQUENCIA_Callback
        FREQUENCIA_Callback(value);
    }
}

void LoRA_PopUpBase::handleTickEvent()
{
    if (loRa_Config_End_DelayCounter > 0)
    {
        loRa_Config_End_DelayCounter--;
        if (loRa_Config_End_DelayCounter == 0)
        {
                //LoRa_Config_Set_Position
                //When LoRa_Config_End_Delay completed call virtual function
                //Call LoRa_Config_Set_Position
                LoRa_Config_Set_Position();
            touchgfx::Application::getInstance()->unregisterTimerWidget(this);
        }
    }
}
